<?xml version="1.0" encoding="utf-8"?>
<resources>

    <declare-styleable name="RangeSeekBar">
        <!-- the minimum of the range -->
        <attr name="absoluteMinValue" format="integer|float"/>

        <!-- the maximum of the range -->
        <attr name="absoluteMaxValue" format="integer|float"/>

        <!-- the step value -->
        <attr name="step" format="integer|float"/>

        <!-- show a single slider -->
        <attr name="singleThumb" format="boolean"/>

        <!-- show the labels on the right and left-->
        <attr name="showLabels" format="boolean"/>

        <!-- alwaysActive will make the buttons and bar always draw as the activeColor (the default is false) -->
        <attr name="alwaysActive" format="boolean"/>

        <!-- show the currently selected value above each thumb (defaults to true) -->
        <attr name="valuesAboveThumbs" format="boolean"/>

        <!-- padding on either side on the slider -->
        <attr name="internalPadding" format="dimension"/>

        <!-- the height of the bar -->
        <attr name="barHeight" format="dimension"/>

        <!-- the color of the bar that is not selected -->
        <attr name="defaultColor" format="color"/>

        <!-- the color of the bar that is selected -->
        <attr name="activeColor" format="color"/>

        <!-- the color of the text above thumbs -->
        <attr name="textAboveThumbsColor" format="color"/>

        <!-- set drawables for thumb handles -->
        <attr name="thumbNormal" format="reference"/>
        <attr name="thumbPressed" format="reference"/>
        <attr name="thumbDisabled" format="reference"/>

        <!-- thumb shadow specifications -->
        <attr name="thumbShadow" format="boolean"/>
        <attr name="thumbShadowColor" format="color"/>
        <attr name="thumbShadowXOffset" format="dimension"/>
        <attr name="thumbShadowYOffset" format="dimension"/>
        <attr name="thumbShadowBlur" format="dimension"/>

        <!-- to activate the thumbs and texts when the min and max values are the default ones (defaults to false) -->
        <attr name="activateOnDefaultValues" format="boolean"/>
    </declare-styleable>
    <declare-styleable name="MyRippleButton">
        <attr name="background" format="reference" />
        <attr name="text" format="string" />
        <attr name="textcolor" format="color" />
        <attr name="textsize" format="integer" />
    </declare-styleable>

    <declare-styleable name="ViewPagerIndicator">
        <!-- Style of the circle indicator. -->
        <attr name="vpiCirclePageIndicatorStyle" format="reference"/>
        <!-- Style of the icon indicator's views. -->
        <attr name="vpiIconPageIndicatorStyle" format="reference"/>
        <!-- Style of the line indicator. -->
        <attr name="vpiLinePageIndicatorStyle" format="reference"/>
        <!-- Style of the title indicator. -->
        <attr name="vpiTitlePageIndicatorStyle" format="reference"/>
        <!-- Style of the tab indicator's tabs. -->
        <attr name="vpiTabPageIndicatorStyle" format="reference"/>
        <!-- Style of the underline indicator. -->
        <attr name="vpiUnderlinePageIndicatorStyle" format="reference"/>
    </declare-styleable>

    <declare-styleable name="CirclePageIndicator">

        <!-- Color of the filled circle that represents the current page. -->
        <attr name="fillColor" format="color" />
        <!-- Color of the filled circles that represents pages. -->
        <attr name="pageColor" format="color" />
        <!-- Orientation of the indicator. -->
        <attr name="android:orientation"/>
        <!-- Radius of the circles. This is also the spacing between circles. -->
        <attr name="radius" format="dimension" />
        <!-- Whether or not the selected indicator snaps to the circles. -->
        <attr name="snap" format="boolean" />
        <!-- Color of the open circles. -->
        <attr name="strokeColor" format="color" />
        <!-- Width of the stroke used to draw the circles. -->
        <attr name="strokeWidth" format="integer" />
        <!-- View background -->
        <attr name="android:background"/>
    </declare-styleable>

    <declare-styleable name="CircleIndicator">

        <attr name="ci_width" format="dimension" />

        <attr name="ci_height" format="dimension" />

        <attr name="ci_margin" format="dimension" />

        <attr name="ci_animator" format="reference" />

        <attr name="ci_animator_reverse" format="reference" />

        <attr name="ci_drawable" format="reference" />

        <attr name="ci_drawable_unselected" format="reference" />


        -
        <attr name="ci_orientation" format="enum">

            <!-- Defines an horizontal widget. -->


            <enum name="horizontal" value="0" />

            <!-- Defines a vertical widget. -->


            <enum name="vertical" value="1" />

        </attr>


        -
        <attr name="ci_gravity">

            <!-- Push object to the top of its container, not changing its size. -->


            <flag name="top" value="0x30" />

            <!-- Push object to the bottom of its container, not changing its size. -->


            <flag name="bottom" value="0x50" />

            <!-- Push object to the left of its container, not changing its size. -->


            <flag name="left" value="0x03" />

            <!-- Push object to the right of its container, not changing its size. -->


            <flag name="right" value="0x05" />

            <!-- Place object in the vertical center of its container, not changing its size. -->


            <flag name="center_vertical" value="0x10" />

            <!-- Grow the vertical size of the object if needed so it completely fills its container. -->


            <flag name="fill_vertical" value="0x70" />

            <!-- Place object in the horizontal center of its container, not changing its size. -->


            <flag name="center_horizontal" value="0x01" />

            <!-- Grow the horizontal size of the object if needed so it completely fills its container. -->


            <flag name="fill_horizontal" value="0x07" />

            <!-- Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. -->


            <flag name="center" value="0x11" />

            <!-- Grow the horizontal and vertical size of the object if needed so it completely fills its container. -->


            <flag name="fill" value="0x77" />

            <!-- Additional option that can be set to have the top and/or bottom edges of the child clipped to its container's bounds. The clip will be based on the vertical gravity: a top gravity will clip the bottom edge, a bottom gravity will clip the top edge, and neither will clip both edges. -->


            <flag name="clip_vertical" value="0x80" />

            <!-- Additional option that can be set to have the left and/or right edges of the child clipped to its container's bounds. The clip will be based on the horizontal gravity: a left gravity will clip the right edge, a right gravity will clip the left edge, and neither will clip both edges. -->


            <flag name="clip_horizontal" value="0x08" />

            <!-- Push object to the beginning of its container, not changing its size. -->


            <flag name="start" value="0x00800003" />

            <!-- Push object to the end of its container, not changing its size. -->


            <flag name="end" value="0x00800005" />

        </attr>

    </declare-styleable>

    <declare-styleable name="RoundedImageView">
        <attr name="riv_corner_radius" format="dimension" />
        <attr name="riv_corner_radius_top_left" format="dimension" />
        <attr name="riv_corner_radius_top_right" format="dimension" />
        <attr name="riv_corner_radius_bottom_left" format="dimension" />
        <attr name="riv_corner_radius_bottom_right" format="dimension" />
        <attr name="riv_border_width" format="dimension" />
        <attr name="riv_border_color" format="color" />
        <attr name="riv_mutate_background" format="boolean" />
        <attr name="riv_oval" format="boolean" />
        <attr name="android:scaleType" />
        <attr name="riv_tile_mode">
            <enum name="clamp" value="0" />
            <enum name="repeat" value="1" />
            <enum name="mirror" value="2" />
        </attr>
        <attr name="riv_tile_mode_x">
            <enum name="clamp" value="0" />
            <enum name="repeat" value="1" />
            <enum name="mirror" value="2" />
        </attr>
        <attr name="riv_tile_mode_y">
            <enum name="clamp" value="0" />
            <enum name="repeat" value="1" />
            <enum name="mirror" value="2" />
        </attr>
    </declare-styleable>
    <declare-styleable name="CircleImageView">
        <attr name="civ_border_width" format="dimension" />
        <attr name="civ_border_color" format="color" />
        <attr name="civ_border_overlay" format="boolean" />
        <!-- {@deprecated Use civ_circlebackground_color instead.} -->
        <attr name="civ_fill_color" format="color" />
        <attr name="civ_circle_background_color" format="color" />
    </declare-styleable>
</resources>